function transition(){return d3.transition().delay(function(){return lastI+1===n?(lastI=0,5e3):(lastI++,0)}).duration(1250).each("start",function(){title.text(countries[i=(i+1)%n].name)}).tween("rotate",function(){var t=d3.geo.centroid(countries[i]),e=d3.interpolate(projection.rotate(),[-t[0],-t[1]]);return function(t){projection.rotate(e(t)),c.clearRect(0,0,width,height),c.fillStyle="#bbb",c.beginPath(),path(land),c.fill(),c.fillStyle="#af6e7b",c.beginPath(),path(countries[i]),c.fill(),c.strokeStyle="#fff",c.lineWidth=.5,c.beginPath(),path(borders),c.stroke(),c.strokeStyle="#ccc",c.lineWidth=2,c.beginPath(),path(globe),c.stroke()}}).transition().each("end",transition),!1}function ready(t,e,o){globe={type:"Sphere"},land=topojson.feature(e,e.objects.land),borders=topojson.mesh(e,e.objects.countries,function(t,e){return t!==e}),countries=topojson.feature(e,e.objects.countries).features,countries=countries.filter(function(t){return o.some(function(e){return t.id==e.id?t.name=e.name:void 0})}).sort(function(t,e){return t.name.localeCompare(e.name)}),lastI=0,i=-1,n=countries.length,setInterval(function r(){d3.transition().delay(function(){return lastI+1===n?(lastI=0,5e3):(lastI++,0)}).duration(1250).each("start",function(){title.text(countries[i=(i+1)%n].name)}).tween("rotate",function(){var t=d3.geo.centroid(countries[i]),e=d3.interpolate(projection.rotate(),[-t[0],-t[1]]);return function(t){projection.rotate(e(t)),c.clearRect(0,0,width,height),c.fillStyle="#bbb",c.beginPath(),path(land),c.fill(),c.fillStyle="#af6e7b",c.beginPath(),path(countries[i]),c.fill(),c.strokeStyle="#fff",c.lineWidth=.5,c.beginPath(),path(borders),c.stroke(),c.strokeStyle="#ccc",c.lineWidth=1,c.beginPath(),path(globe),c.stroke()}}).transition().each("end",r)}(),2e4)}var globe,land,borders,countries,lastI=0,i=-1,n=0,diameter=320,radius=diameter>>1,width=diameter,height=diameter,projection=d3.geo.orthographic().scale(radius-2).translate([radius,radius]).clipAngle(90).precision(0),canvas=d3.select("#rotatingGlobe").append("canvas").attr("width",width).attr("height",height),c=canvas.node().getContext("2d"),path=d3.geo.path().projection(projection).context(c),title=d3.select("#crisis_name");queue().defer(d3.json,"productiondata/world-110m.json").defer(d3.tsv,"productiondata/crisis-country-names-alt.tsv").await(ready);